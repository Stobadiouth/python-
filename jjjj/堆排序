# 建一个大根堆
def sift(li, low, high):
    tmp = li[low]
    # i是父节点
    i = low
    # j是左节点
    j = 2 * i + 1
    while j <= high:
        if j < high and li[j] < li[j + 1]:
            j = j + 1
        if tmp < li[j]:
            li[i] = li[j]
            i = j
            j = 2 * i + 1
        else:
            break
    li[i] = tmp


def heap(li):
    #     建一个堆
    n = len(li)
    for i in range(n // 2 - 1, -1, -1):
        sift(li, i, n - 1)
    #     出数
    for i in range(n - 1, -1, -1):
        # 把栈顶元素和最后一个元素交换
        li[0], li[i] = li[i], li[0]
        sift(li, 0, i - 1)


import random

li = [i for i in range(20)]
random.shuffle(li)
heap(li)
print(li)
